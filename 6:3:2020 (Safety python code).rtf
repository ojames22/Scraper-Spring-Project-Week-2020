{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import requests\
from bs4 import BeautifulSoup\
\
def username():\
	username = input('Enter username: ')\
\
	print('Hello ' + username + '! Please enter a date for games and starts.')\
\
	date_value = input('Enter date:')\
	print('Date: ' + date_value)\
\
def get_date():\
	month = input('Enter month: ')\
	day = input('Enter day: ')\
	year = input('Enter year: ')\
\
	URL = 'https://www.basketball-reference.com/boxscores/?month=' + month + '&day=' + day +'&year=' + year\
	print(URL)\
\
def scrape_games(location=None):\
	month = input('Enter month: ')\
	day = input('Enter day: ')\
	year = input('Enter year: ')\
\
	"""Notes from RealPython.com:\
	:param location: Where the job is located\
	:type location: str\
	:return: all job postings from first page that match the search results\
	:rtype: BeautifulSoup object\
	"""\
	if location:\
		URL = (\
			'https://www.basketball-reference.com/boxscores/'\
			'?month&day&year\{location\}'\
		)\
	else:\
		URL = 'https://www.basketball-reference.com/boxscores/?month=' + month + '&day=' + day +'&year=' + year\
	page = requests.get(URL)\
\
	soup = BeautifulSoup(page.content, 'html.parser')\
	results = soup.find('div', \{'class": "game_summaries'\})\
	return results\
\
#def find_elements(data):\
	#results = soup.find(id='month')\
\
\
	#return results\
\
def print_games(results):\
	game_elems = results.find('div', \{'class": "game_summary'\})\
\
	for game_elem in game_elems:\
		winner_elem = game_elem.find('div', class_='winner')\
		winnerScore_elem = game_elem.find('td', class_='right')\
		loser_elem = game_elem.find('div', class_='loser')\
		loserScore_elem = game_elem.find('td',class_='right')\
		if None in (winner_elem,winnerScore_elem,loser_elem,loserScore_elem):\
			print('No games were played on this date.')\
		print(month_elem.text)\
		print(day_elem.text)\
		print(year_elem.text)\
		print(game_elem.text)\
		print()\
\
#Call scrape games\
results = scrape_games()\
print_games(results)\
#print(print_games)\
#Pass results to print_games\
\
#https://www.basketball-reference.com/boxscores/?month=1&day=1&year=2000}